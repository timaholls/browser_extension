#!/usr/bin/env python3
"""
–£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ª–∏—Ü–µ–Ω–∑–∏–æ–Ω–Ω—ã—Ö –∫–ª—é—á–µ–π
Auto Proxy Connector License Generator
"""

import sys
import hashlib
import hmac
from datetime import datetime, timedelta
from pathlib import Path

# –°–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–ª—é—á (–¥–æ–ª–∂–µ–Ω —Å–æ–≤–ø–∞–¥–∞—Ç—å —Å apc_server.py)
SECRET_KEY = "apc_proxy_connector_secret_2025"


def generate_signature(client_id: str, expire_date: str) -> str:
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –ø–æ–¥–ø–∏—Å—å –¥–ª—è –ª–∏—Ü–µ–Ω–∑–∏–æ–Ω–Ω–æ–≥–æ –∫–ª—é—á–∞"""
    data = f"{client_id}:{expire_date}"
    signature = hmac.new(SECRET_KEY.encode(), data.encode(), hashlib.sha256).hexdigest()[:16]
    return signature


def generate_license_key(client_id: str, days: int = 30) -> dict:
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –ª–∏—Ü–µ–Ω–∑–∏–æ–Ω–Ω—ã–π –∫–ª—é—á –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π"""
    expire_date = (datetime.now() + timedelta(days=days)).strftime("%Y-%m-%d")
    signature = generate_signature(client_id, expire_date)
    license_key = f"{client_id}:{expire_date}:{signature}"
    
    return {
        "client_id": client_id,
        "expire_date": expire_date,
        "days": days,
        "license_key": license_key
    }


def save_license_to_file(license_key: str, filename: str = None):
    """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –ª–∏—Ü–µ–Ω–∑–∏—é –≤ —Ñ–∞–π–ª"""
    if filename is None:
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞
        filename = "license.key"
    
    filepath = Path(filename)
    filepath.write_text(license_key)
    return filepath


def main():
    print("=" * 60)
    print("üîë Auto Proxy Connector - –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –ª–∏—Ü–µ–Ω–∑–∏–π")
    print("=" * 60)
    print()
    
    # –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º
    if len(sys.argv) < 2:
        print("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:")
        print("  python generate_license.py <client_id> [days]")
        print()
        print("–ü—Ä–∏–º–µ—Ä—ã:")
        print("  python generate_license.py CLIENT_001 30")
        print("  python generate_license.py COMPANY_XYZ 365")
        print()
        
        # –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –≤–≤–æ–¥
        try:
            client_id = input("–í–≤–µ–¥–∏—Ç–µ ID –∫–ª–∏–µ–Ω—Ç–∞: ").strip()
            if not client_id:
                print("‚ùå ID –∫–ª–∏–µ–Ω—Ç–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º")
                sys.exit(1)
            
            days_input = input("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 30): ").strip()
            days = int(days_input) if days_input else 30
            
        except KeyboardInterrupt:
            print("\n\n‚ùå –û—Ç–º–µ–Ω–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
            sys.exit(1)
    else:
        # –ö–æ–º–∞–Ω–¥–Ω–∞—è —Å—Ç—Ä–æ–∫–∞
        client_id = sys.argv[1]
        days = int(sys.argv[2]) if len(sys.argv) > 2 else 30
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ª–∏—Ü–µ–Ω–∑–∏—é
    print(f"\n‚öôÔ∏è  –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ª–∏—Ü–µ–Ω–∑–∏–∏...")
    license_data = generate_license_key(client_id, days)
    
    print("\n‚úÖ –õ–∏—Ü–µ–Ω–∑–∏—è —É—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–∞!")
    print("-" * 60)
    print(f"ID –∫–ª–∏–µ–Ω—Ç–∞:      {license_data['client_id']}")
    print(f"–°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è:   {days} –¥–Ω–µ–π")
    print(f"–î–µ–π—Å—Ç–≤—É–µ—Ç –¥–æ:    {license_data['expire_date']}")
    print(f"\n–õ–ò–¶–ï–ù–ó–ò–û–ù–ù–´–ô –ö–õ–Æ–ß:")
    print(f"{license_data['license_key']}")
    print("-" * 60)
    
    # –°–ø—Ä–∞—à–∏–≤–∞–µ–º, —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –ª–∏ –≤ —Ñ–∞–π–ª
    print()
    save_to_file = input("–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –ª–∏—Ü–µ–Ω–∑–∏—é –≤ —Ñ–∞–π–ª? (y/n): ").strip().lower()
    
    if save_to_file == 'y':
        filepath = save_license_to_file(license_data['license_key'])
        print(f"\n‚úÖ –õ–∏—Ü–µ–Ω–∑–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ —Ñ–∞–π–ª: {filepath}")
        print("\nüìã –î–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ª–∏—Ü–µ–Ω–∑–∏–∏:")
        print("   1. –§–∞–π–ª license.key —É–∂–µ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞")
        print("   2. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ FastAPI —Å–µ—Ä–≤–µ—Ä (apc_server.py)")
        print("   3. –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ")
    else:
        print("\nüìã –î–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ª–∏—Ü–µ–Ω–∑–∏–∏:")
        print("   1. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –ª–∏—Ü–µ–Ω–∑–∏–æ–Ω–Ω—ã–π –∫–ª—é—á –≤—ã—à–µ")
        print(f"   2. –°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª: license.key –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞")
        print("   3. –í—Å—Ç–∞–≤—å—Ç–µ –≤ –Ω–µ–≥–æ –ª–∏—Ü–µ–Ω–∑–∏–æ–Ω–Ω—ã–π –∫–ª—é—á")
        print("   4. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ FastAPI —Å–µ—Ä–≤–µ—Ä")
    
    print("\n" + "=" * 60)


if __name__ == "__main__":
    main()

