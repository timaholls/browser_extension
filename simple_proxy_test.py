#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –ø—Ä–æ–∫—Å–∏-—Å–µ—Ä–≤–µ—Ä–∞
"""

import asyncio
import aiohttp
import json

async def test_proxy_server():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–∫—Å–∏-—Å–µ—Ä–≤–µ—Ä–∞"""
    
    base_url = "http://localhost:8765"
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–∫—Å–∏-—Å–µ—Ä–≤–µ—Ä–∞...")
    
    async with aiohttp.ClientSession() as session:
        
        # 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è
        print("\n1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–∏—Å–∞...")
        try:
            async with session.get(f"{base_url}/health") as response:
                if response.status == 200:
                    data = await response.json()
                    print(f"‚úÖ –°–µ—Ä–≤–∏—Å –∑–¥–æ—Ä–æ–≤: {data}")
                else:
                    print(f"‚ùå –û—à–∏–±–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è: {response.status}")
        except Exception as e:
            print(f"‚ùå –°–µ—Ä–≤–∏—Å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {e}")
            return
        
        # 2. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –≤—Å–µ—Ö –ø—Ä–æ–∫—Å–∏
        print("\n2. –°—Ç–∞—Ç—É—Å –≤—Å–µ—Ö –ø—Ä–æ–∫—Å–∏...")
        try:
            async with session.get(f"{base_url}/status") as response:
                if response.status == 200:
                    data = await response.json()
                    print(f"‚úÖ –°—Ç–∞—Ç—É—Å –ø–æ–ª—É—á–µ–Ω: {len(data)} –ø—Ä–æ—Ñ–∏–ª–µ–π")
                    for profile_id, status in data.items():
                        print(f"   {profile_id}: {'üü¢ –ê–∫—Ç–∏–≤–µ–Ω' if status['is_active'] else 'üî¥ –ù–µ–∞–∫—Ç–∏–≤–µ–Ω'} (–ø–æ—Ä—Ç {status['local_port']})")
                else:
                    print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞: {response.status}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        
        # 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–∏—Ü–µ–Ω–∑–∏–∏
        print("\n3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–∏—Ü–µ–Ω–∑–∏–∏...")
        try:
            async with session.get(f"{base_url}/license/status") as response:
                if response.status == 200:
                    data = await response.json()
                    print(f"‚úÖ –õ–∏—Ü–µ–Ω–∑–∏—è: {data['license_status']}")
                else:
                    print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ª–∏—Ü–µ–Ω–∑–∏–∏: {response.status}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        
        # 4. –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –ø—Ä–æ–∫—Å–∏ –¥–ª—è profile1
        print("\n4. –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –ø—Ä–æ–∫—Å–∏ –¥–ª—è profile1...")
        try:
            async with session.post(f"{base_url}/apply", json={
                "profile_id": "profile1",
                "user_type": "user"
            }) as response:
                if response.status == 200:
                    data = await response.json()
                    print(f"‚úÖ –ü—Ä–æ–∫—Å–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω: {data}")
                else:
                    error_data = await response.json()
                    print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è: {error_data}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        
        # 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ profile1
        print("\n5. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ profile1...")
        try:
            async with session.get(f"{base_url}/status/profile1") as response:
                if response.status == 200:
                    data = await response.json()
                    print(f"‚úÖ –°—Ç–∞—Ç—É—Å profile1: {data}")
                else:
                    print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞: {response.status}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        
        # 6. –¢–µ—Å—Ç –ø—Ä–æ–∫—Å–∏ –∑–∞–ø—Ä–æ—Å–∞
        print("\n6. –¢–µ—Å—Ç –ø—Ä–æ–∫—Å–∏ –∑–∞–ø—Ä–æ—Å–∞...")
        try:
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å —á–µ—Ä–µ–∑ –ø—Ä–æ–∫—Å–∏
            async with session.get("http://localhost:3128/httpbin.org/ip") as response:
                if response.status == 200:
                    data = await response.json()
                    print(f"‚úÖ –ü—Ä–æ–∫—Å–∏ –∑–∞–ø—Ä–æ—Å —É—Å–ø–µ—à–µ–Ω: {data}")
                else:
                    print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–∫—Å–∏ –∑–∞–ø—Ä–æ—Å–∞: {response.status}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–∫—Å–∏ –∑–∞–ø—Ä–æ—Å–∞: {e}")
        
        # 7. –û—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏–µ profile1
        print("\n7. –û—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏–µ profile1...")
        try:
            async with session.post(f"{base_url}/release/profile1") as response:
                if response.status == 200:
                    data = await response.json()
                    print(f"‚úÖ –ü—Ä–æ—Ñ–∏–ª—å –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω: {data}")
                else:
                    print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏—è: {response.status}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        
        # 8. –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
        print("\n8. –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞...")
        try:
            async with session.get(f"{base_url}/status/profile1") as response:
                if response.status == 200:
                    data = await response.json()
                    print(f"‚úÖ –§–∏–Ω–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å profile1: {data}")
                else:
                    print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞: {response.status}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    asyncio.run(test_proxy_server())