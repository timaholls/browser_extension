#!/usr/bin/env python3
"""
–¢–µ—Å—Ç HTTPS —á–µ—Ä–µ–∑ –ø—Ä–æ–∫—Å–∏
"""

import requests
import time

def test_https_through_proxy():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç HTTPS –∑–∞–ø—Ä–æ—Å—ã —á–µ—Ä–µ–∑ –ø—Ä–æ–∫—Å–∏"""
    
    print("üß™ –¢–µ—Å—Ç HTTPS —á–µ—Ä–µ–∑ –ø—Ä–æ–∫—Å–∏...")
    
    base_url = "http://94.241.175.200:8765"
    
    try:
        # 1. –ü—Ä–∏–º–µ–Ω—è–µ–º –ø—Ä–æ–∫—Å–∏
        print("\n1. –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –ø—Ä–æ–∫—Å–∏...")
        apply_data = {
            "profile_id": "profile1",
            "user_type": "user"
        }
        
        response = requests.post(
            f"{base_url}/apply",
            json=apply_data,
            headers={"Content-Type": "application/json"}
        )
        
        if response.status_code == 200:
            result = response.json()
            print(f"‚úÖ –ü—Ä–æ–∫—Å–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω: {result}")
            local_port = result.get("local_port")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –ø—Ä–æ–∫—Å–∏: {response.status_code}")
            return
        
        # 2. –¢–µ—Å—Ç–∏—Ä—É–µ–º HTTP –∑–∞–ø—Ä–æ—Å
        print(f"\n2. –¢–µ—Å—Ç HTTP –∑–∞–ø—Ä–æ—Å–∞ —á–µ—Ä–µ–∑ –ø—Ä–æ–∫—Å–∏...")
        try:
            response = requests.get(
                "http://httpbin.org/ip",
                proxies={
                    'http': f'http://94.241.175.200:{local_port}',
                    'https': f'http://94.241.175.200:{local_port}'
                },
                timeout=10
            )
            
            if response.status_code == 200:
                data = response.json()
                print(f"‚úÖ HTTP –∑–∞–ø—Ä–æ—Å —É—Å–ø–µ—à–µ–Ω: {data}")
            else:
                print(f"‚ùå HTTP –∑–∞–ø—Ä–æ—Å –Ω–µ—É—Å–ø–µ—à–µ–Ω: {response.status_code}")
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ HTTP –∑–∞–ø—Ä–æ—Å–∞: {e}")
        
        # 3. –¢–µ—Å—Ç–∏—Ä—É–µ–º HTTPS –∑–∞–ø—Ä–æ—Å
        print(f"\n3. –¢–µ—Å—Ç HTTPS –∑–∞–ø—Ä–æ—Å–∞ —á–µ—Ä–µ–∑ –ø—Ä–æ–∫—Å–∏...")
        try:
            response = requests.get(
                "https://httpbin.org/ip",
                proxies={
                    'http': f'http://94.241.175.200:{local_port}',
                    'https': f'http://94.241.175.200:{local_port}'
                },
                timeout=10
            )
            
            if response.status_code == 200:
                data = response.json()
                print(f"‚úÖ HTTPS –∑–∞–ø—Ä–æ—Å —É—Å–ø–µ—à–µ–Ω: {data}")
            else:
                print(f"‚ùå HTTPS –∑–∞–ø—Ä–æ—Å –Ω–µ—É—Å–ø–µ—à–µ–Ω: {response.status_code}")
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ HTTPS –∑–∞–ø—Ä–æ—Å–∞: {e}")
        
        # 4. –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–µ–∞–ª—å–Ω—ã–π —Å–∞–π—Ç —á–µ—Ä–µ–∑ HTTPS
        print(f"\n4. –¢–µ—Å—Ç —Ä–µ–∞–ª—å–Ω–æ–≥–æ —Å–∞–π—Ç–∞ —á–µ—Ä–µ–∑ HTTPS...")
        try:
            response = requests.get(
                "https://api.ipify.org?format=json",
                proxies={
                    'http': f'http://94.241.175.200:{local_port}',
                    'https': f'http://94.241.175.200:{local_port}'
                },
                timeout=10
            )
            
            if response.status_code == 200:
                data = response.json()
                print(f"‚úÖ –†–µ–∞–ª—å–Ω—ã–π —Å–∞–π—Ç —á–µ—Ä–µ–∑ HTTPS: {data}")
            else:
                print(f"‚ùå –†–µ–∞–ª—å–Ω—ã–π —Å–∞–π—Ç –Ω–µ—É—Å–ø–µ—à–µ–Ω: {response.status_code}")
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Ä–µ–∞–ª—å–Ω–æ–≥–æ —Å–∞–π—Ç–∞: {e}")
        
        # 5. –û—á–∏—â–∞–µ–º –ø—Ä–æ–∫—Å–∏
        print(f"\n5. –û—á–∏—Å—Ç–∫–∞ –ø—Ä–æ–∫—Å–∏...")
        response = requests.post(f"{base_url}/clear")
        if response.status_code == 200:
            print("‚úÖ –ü—Ä–æ–∫—Å–∏ –æ—á–∏—â–µ–Ω")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏: {response.status_code}")
        
        print(f"\nüéâ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!")
        
    except Exception as e:
        print(f"‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    test_https_through_proxy()
