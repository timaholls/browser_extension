#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤—Å–µ—Ö 5 –ø—Ä–æ–∫—Å–∏ —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π IP –∞–¥—Ä–µ—Å–æ–≤
"""
import requests
import time
import json
import urllib3
from typing import Dict, List, Tuple

# –û—Ç–∫–ª—é—á–∞–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è SSL
urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)
# rm -rf extensions_obfuscated && node obfuscate.js
# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–æ–∫—Å–∏
PROXY_CONFIGS = {
    'profile1': {
        'name': 'profile1',
        'expected_ip': '195.158.255.144',
        'upstream_proxy': '195.158.255.144:60341',
        'username': 'pD3eAehGmG',
        'password': 'M2E7nVW38B'
    },
    # 'profile2': {
    #     'name': 'profile2',
    #     'expected_ip': '91.188.244.4',
    #     'upstream_proxy': '91.188.244.4:1050',
    #     'username': 'fOwk1c',
    #     'password': 'hBP8MJjtKg'
    # },
    # 'profile3': {
    #     'name': 'profile3',
    #     'expected_ip': '185.181.245.211',
    #     'upstream_proxy': '185.181.245.211:1050',
    #     'username': 'fOwk1c',
    #     'password': 'hBP8MJjtKg'
    # },
    # 'profile4': {
    #     'name': 'profile4',
    #     'expected_ip': '188.130.187.174',
    #     'upstream_proxy': '188.130.187.174:1050',
    #     'username': 'fOwk1c',
    #     'password': 'hBP8MJjtKg'
    # },
    # 'profile5': {
    #     'name': 'profile5',
    #     'expected_ip': '45.140.53.190',
    #     'upstream_proxy': '45.140.53.190:1050',
    #     'username': 'fOwk1c',
    #     'password': 'hBP8MJjtKg'
    # }
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
TEST_URL = 'https://api.ipify.org?format=json'
TIMEOUT = 30


def test_without_proxy() -> Tuple[bool, str]:
    """
    –¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø—Ä—è–º–æ–π –¥–æ—Å—Ç—É–ø –±–µ–∑ –ø—Ä–æ–∫—Å–∏ (–¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è)
    """
    print(f"\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä—è–º–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –±–µ–∑ –ø—Ä–æ–∫—Å–∏...")

    try:
        response = requests.get(TEST_URL, timeout=TIMEOUT, verify=False)

        if response.status_code == 200:
            data = response.json()
            actual_ip = data.get('ip', '')
            print(f"   ‚úÖ –ü—Ä—è–º–æ–π IP: {actual_ip}")
            return True, actual_ip
        else:
            print(f"   ‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
            return False, ""

    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
        return False, ""


def test_direct_upstream_proxy(config: Dict, server_ip: str) -> Tuple[bool, str, str]:
    """
    –¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø—Ä—è–º–æ–π –¥–æ—Å—Ç—É–ø –∫ upstream –ø—Ä–æ–∫—Å–∏
    """
    print(f"   üîó –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä—è–º–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ upstream –ø—Ä–æ–∫—Å–∏...")
    
    proxy_url = f"http://{config['username']}:{config['password']}@{config['upstream_proxy']}"
    proxies = {
        'http': proxy_url,
        'https': proxy_url
    }
    
    try:
        response = requests.get(TEST_URL, timeout=TIMEOUT, proxies=proxies, verify=False)
        
        if response.status_code == 200:
            data = response.json()
            actual_ip = data.get('ip', '')
            expected_ip = config['expected_ip']
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ IP –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç IP —Å–µ—Ä–≤–µ—Ä–∞ (–∑–Ω–∞—á–∏—Ç –ø—Ä–æ–∫—Å–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç)
            if actual_ip != server_ip:
                if actual_ip == expected_ip:
                    print(f"      ‚úÖ IP —Å–æ–≤–ø–∞–¥–∞–µ—Ç: {actual_ip} (–ø—Ä–æ–∫—Å–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç)")
                    return True, actual_ip, ""
                else:
                    print(f"      ‚ö†Ô∏è  IP –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç: –ø–æ–ª—É—á–µ–Ω {actual_ip}, –æ–∂–∏–¥–∞–ª—Å—è {expected_ip}")
                    return False, actual_ip, f"IP –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç: –ø–æ–ª—É—á–µ–Ω {actual_ip}, –æ–∂–∏–¥–∞–ª—Å—è {expected_ip}"
            else:
                print(f"      ‚ùå –ü—Ä–æ–∫—Å–∏ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç: –ø–æ–ª—É—á–µ–Ω IP —Å–µ—Ä–≤–µ—Ä–∞ {actual_ip}")
                return False, actual_ip, f"–ü—Ä–æ–∫—Å–∏ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç: –ø–æ–ª—É—á–µ–Ω IP —Å–µ—Ä–≤–µ—Ä–∞ {actual_ip}"
        else:
            print(f"      ‚ùå –û—à–∏–±–∫–∞ HTTP: {response.status_code}")
            return False, "", f"HTTP –æ—à–∏–±–∫–∞: {response.status_code}"
            
    except Exception as e:
        print(f"      ‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        return False, "", f"–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}"


def main():
    """
    –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    """
    print("=" * 80)
    print("üöÄ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ü–†–û–ö–°–ò –°–ï–†–í–ï–†–û–í")
    print("=" * 80)

    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä—è–º–æ–π –¥–æ—Å—Ç—É–ø
    direct_success, direct_ip = test_without_proxy()
    print(f"\nüìç –ü—Ä—è–º–æ–π IP —Å–µ—Ä–≤–µ—Ä–∞: {direct_ip}")

    # –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    results = {
        'direct_proxy': {}
    }

    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–∞–∂–¥—ã–π –ø—Ä–æ—Ñ–∏–ª—å
    for profile_name, config in PROXY_CONFIGS.items():
        print(f"\n{'=' * 60}")
        print(f"üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï {profile_name.upper()}")
        print(f"{'=' * 60}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä—è–º–æ–π –¥–æ—Å—Ç—É–ø –∫ upstream –ø—Ä–æ–∫—Å–∏
        direct_success, direct_ip, direct_message = test_direct_upstream_proxy(config, direct_ip)
        results['direct_proxy'][profile_name] = {
            'success': direct_success,
            'ip': direct_ip,
            'expected_ip': config['expected_ip'],
            'message': direct_message
        }
        
        # –ü–∞—É–∑–∞ –º–µ–∂–¥—É –ø—Ä–æ—Ñ–∏–ª—è–º–∏
        time.sleep(2)

    # –í—ã–≤–æ–¥–∏–º –∏—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
    print(f"\n{'=' * 80}")
    print("üìä –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢")
    print(f"{'=' * 80}")

    print(f"\nüîó –ü–†–Ø–ú–û–ô –î–û–°–¢–£–ü –ö UPSTREAM –ü–†–û–ö–°–ò:")
    print(f"   üìç IP —Å–µ—Ä–≤–µ—Ä–∞: {direct_ip}")
    for profile_name, result in results['direct_proxy'].items():
        status = "‚úÖ" if result['success'] else "‚ùå"
        print(f"   {status} {profile_name}: {result['ip']} (–æ–∂–∏–¥–∞–ª—Å—è: {result['expected_ip']})")
        if not result['success']:
            print(f"      ‚ùå {result['message']}")

    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    direct_success_count = sum(1 for r in results['direct_proxy'].values() if r['success'])

    print(f"\nüìà –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
    print(f"   –ü—Ä—è–º–æ–π –¥–æ—Å—Ç—É–ø: {direct_success_count}/5 —É—Å–ø–µ—à–Ω–æ")

    if direct_success_count == 5:
        print(f"\nüéâ –í–°–ï –¢–ï–°–¢–´ UPSTREAM –ü–†–û–ö–°–ò –ü–†–û–®–õ–ò –£–°–ü–ï–®–ù–û!")
    else:
        print(f"\n‚ùå –ï–°–¢–¨ –ü–†–û–ë–õ–ï–ú–´ –° UPSTREAM –ü–†–û–ö–°–ò –°–ï–†–í–ï–†–ê–ú–ò")

    print(f"\n{'=' * 80}")


if __name__ == "__main__":
    main()
